syntax = "proto3";

package flow.access;

import "flow/entities/account.proto";
import "flow/entities/block.proto";
import "flow/entities/block_header.proto";
import "flow/entities/collection.proto";
import "flow/entities/event.proto";
import "flow/entities/execution_result.proto";
import "flow/entities/transaction.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/onflow/flow/protobuf/go/flow/access";
option java_package = "org.onflow.protobuf.access";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  host: "rest-mainnet.onflow.org";
  base_path: "/v1";
  schemes: [HTTPS];
  consumes: "application/json";
  produces: "application/json";

  info: {
    title: "Access API";
    version: "1.0.0";
    license: {
      name: "GNU Affero General Public License v3.0";
      url: "https://github.com/onflow/flow-go/blob/master/LICENSE.txt";
    };
  };

  responses: {
    key: "default";
    value: {
      description: "An unexpected error response.";
      schema: {
        json_schema: {ref: ".google.rpc.Status"}
      }
    };
  }

  external_docs: {
    url: "https://developers.flow.com/http-api";
    description: "Find out more about the Access API";
  }
};

// AccessAPI is the public-facing API provided by access nodes.
service AccessAPI {
  // Ping is used to check if the access node is alive and healthy.
  rpc Ping(PingRequest) returns (PingResponse);

  // Block Headers

  // GetLatestBlockHeader gets the latest sealed or unsealed block header.
  rpc GetLatestBlockHeader(GetLatestBlockHeaderRequest) returns (BlockHeaderResponse);
  // GetBlockHeaderByID gets a block header by ID.
  rpc GetBlockHeaderByID(GetBlockHeaderByIDRequest) returns (BlockHeaderResponse);
  // GetBlockHeaderByHeight gets a block header by height.
  rpc GetBlockHeaderByHeight(GetBlockHeaderByHeightRequest) returns (BlockHeaderResponse);

  // Blocks

  // GetLatestBlock gets the full payload of the latest sealed or unsealed
  // block.
  rpc GetLatestBlock(GetLatestBlockRequest) returns (BlockResponse);
  // GetBlockByID gets a full block by ID.
  rpc GetBlockByID(GetBlockByIDRequest) returns (BlockResponse) {
    option (google.api.http) = {get: "/blocks/{id}"};
  }
  // GetBlockByHeight gets a full block by height.
  rpc GetBlockByHeight(GetBlockByHeightRequest) returns (BlockResponse);

  // Collections

  // GetCollectionByID gets a collection by ID.
  rpc GetCollectionByID(GetCollectionByIDRequest) returns (CollectionResponse);

  // Transactions

  // SendTransaction submits a transaction to the network.
  rpc SendTransaction(SendTransactionRequest) returns (SendTransactionResponse);
  // GetTransaction gets a transaction by ID.
  rpc GetTransaction(GetTransactionRequest) returns (TransactionResponse) {
    option (google.api.http) = {get: "/transactions/{id}"};
  }
  // GetTransactionResult gets the result of a transaction.
  rpc GetTransactionResult(GetTransactionRequest) returns (TransactionResultResponse) {
    option (google.api.http) = {get: "/transaction_results/{id}"};
  }
  // GetTransactionResultByIndex gets the result of a transaction at a specified
  // block and index
  rpc GetTransactionResultByIndex(GetTransactionByIndexRequest) returns (TransactionResultResponse);
  // GetTransactionResultsByBlockID gets all the transaction results for a
  // specified block
  rpc GetTransactionResultsByBlockID(GetTransactionsByBlockIDRequest) returns (TransactionResultsResponse);
  // GetTransactionsByBlockID gets all the transactions for a specified block
  rpc GetTransactionsByBlockID(GetTransactionsByBlockIDRequest) returns (TransactionsResponse);

  // Accounts

  // GetAccount is an alias for GetAccountAtLatestBlock.
  //
  // Warning: this function is deprecated. It behaves identically to
  // GetAccountAtLatestBlock and will be removed in a future version.
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);
  // GetAccountAtLatestBlock gets an account by address from the latest sealed
  // execution state.
  rpc GetAccountAtLatestBlock(GetAccountAtLatestBlockRequest) returns (AccountResponse);
  // GetAccountAtBlockHeight gets an account by address at the given block
  // height
  rpc GetAccountAtBlockHeight(GetAccountAtBlockHeightRequest) returns (AccountResponse);

  // Scripts

  // ExecuteScriptAtLatestBlock executes a read-only Cadence script against the
  // latest sealed execution state.
  rpc ExecuteScriptAtLatestBlock(ExecuteScriptAtLatestBlockRequest) returns (ExecuteScriptResponse) {
    option (google.api.http) = {
      post: "/scripts"
      body: "*"
    };
  }

  // ExecuteScriptAtBlockID executes a ready-only Cadence script against the
  // execution state at the block with the given ID.
  rpc ExecuteScriptAtBlockID(ExecuteScriptAtBlockIDRequest) returns (ExecuteScriptResponse);
  // ExecuteScriptAtBlockHeight executes a ready-only Cadence script against the
  // execution state at the given block height.
  rpc ExecuteScriptAtBlockHeight(ExecuteScriptAtBlockHeightRequest) returns (ExecuteScriptResponse);

  // Events

  // GetEventsForHeightRange retrieves events emitted within the specified block
  // range.
  rpc GetEventsForHeightRange(GetEventsForHeightRangeRequest) returns (EventsResponse);

  // GetEventsForBlockIDs retrieves events for the specified block IDs and event
  // type.
  rpc GetEventsForBlockIDs(GetEventsForBlockIDsRequest) returns (EventsResponse);

  // NetworkParameters

  // GetNetworkParameters retrieves the Flow network details
  rpc GetNetworkParameters(GetNetworkParametersRequest) returns (GetNetworkParametersResponse);

  // ProtocolState

  // GetLatestProtocolStateSnapshot retrieves the latest sealed protocol state
  // snapshot. Used by Flow nodes joining the network to bootstrap a
  // space-efficient local state.
  rpc GetLatestProtocolStateSnapshot(GetLatestProtocolStateSnapshotRequest) returns (ProtocolStateSnapshotResponse);

  // GetExecutionResultForBlockID returns Execution Result for a given block.
  // At present, Access Node might not have execution results for every block
  // and as usual, until sealed, this data can change
  rpc GetExecutionResultForBlockID(GetExecutionResultForBlockIDRequest) returns (ExecutionResultForBlockIDResponse);
}

message PingRequest {}

message PingResponse {}

// Block Headers

message GetLatestBlockHeaderRequest {
  bool is_sealed = 1;
}

message GetBlockHeaderByIDRequest {
  bytes id = 1;
}

message GetBlockHeaderByHeightRequest {
  uint64 height = 1;
}

message BlockHeaderResponse {
  entities.BlockHeader block = 1;
  entities.BlockStatus block_status = 2;
}

// Blocks

message GetLatestBlockRequest {
  bool is_sealed = 1;
  bool full_block_response = 2;
}

message GetBlockByIDRequest {
  bytes id = 1 [(google.api.field_behavior) = REQUIRED];
  bool full_block_response = 2;
}

message GetBlockByHeightRequest {
  uint64 height = 1;
  bool full_block_response = 2;
}

message BlockResponse {
  entities.Block block = 1;
  entities.BlockStatus block_status = 2;
}

// Collections

message GetCollectionByIDRequest {
  bytes id = 1;
}

message CollectionResponse {
  entities.Collection collection = 1;
}

// Transactions

message SendTransactionRequest {
  entities.Transaction transaction = 1;
}

message SendTransactionResponse {
  bytes id = 1;
}

message GetTransactionRequest {
  bytes id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetTransactionByIndexRequest {
  bytes block_id = 1;
  uint32 index = 2;
}

message GetTransactionsByBlockIDRequest {
  bytes block_id = 1;
}

message TransactionResultsResponse {
  repeated TransactionResultResponse transaction_results = 1;
}

message TransactionsResponse {
  repeated entities.Transaction transactions = 1;
}

message TransactionResponse {
  entities.Transaction transaction = 1;
}

message TransactionResultResponse {
  entities.TransactionStatus status = 1;
  uint32 status_code = 2;
  string error_message = 3;
  repeated entities.Event events = 4;
  bytes block_id = 5;
  bytes transaction_id = 6;
  bytes collection_id = 7;
  uint64 block_height = 8;
}

// Accounts

message GetAccountRequest {
  bytes address = 1;
}

message GetAccountResponse {
  entities.Account account = 1;
}

message GetAccountAtLatestBlockRequest {
  bytes address = 1;
}

message AccountResponse {
  entities.Account account = 1;
}

message GetAccountAtBlockHeightRequest {
  bytes address = 1;
  uint64 block_height = 2;
}

// Scripts

message ExecuteScriptAtLatestBlockRequest {
  // Base64 encoded content of the Cadence script.
  bytes script = 1;
  // An list of arguments each encoded as Base64 passed in the [JSON-Cadence interchange format](https://docs.onflow.org/cadence/json-cadence-spec/).
  repeated bytes arguments = 2;
}

message ExecuteScriptAtBlockIDRequest {
  bytes block_id = 1;
  bytes script = 2;
  repeated bytes arguments = 3;
}

message ExecuteScriptAtBlockHeightRequest {
  uint64 block_height = 1;
  bytes script = 2;
  repeated bytes arguments = 3;
}

message ExecuteScriptResponse {
  bytes value = 1;
}

// Events

message GetEventsForHeightRangeRequest {
  string type = 1;
  uint64 start_height = 2;
  uint64 end_height = 3;
}

message GetEventsForBlockIDsRequest {
  string type = 1;
  repeated bytes block_ids = 2;
}

message EventsResponse {
  message Result {
    bytes block_id = 1;
    uint64 block_height = 2;
    repeated entities.Event events = 3;
    google.protobuf.Timestamp block_timestamp = 4;
  }
  repeated Result results = 1;
}

// Network Parameters

message GetNetworkParametersRequest {}

message GetNetworkParametersResponse {
  string chain_id = 1;
}

// Protocol State

message GetLatestProtocolStateSnapshotRequest {}

message ProtocolStateSnapshotResponse {
  bytes serializedSnapshot = 1;
}

// Execution Results

message GetExecutionResultForBlockIDRequest {
  bytes block_id = 1;
}

message ExecutionResultForBlockIDResponse {
  entities.ExecutionResult execution_result = 1;
}
