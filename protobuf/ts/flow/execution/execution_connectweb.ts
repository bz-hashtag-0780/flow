// @generated by protoc-gen-connect-web v0.3.2 with parameter "target=ts"
// @generated from file flow/execution/execution.proto (package flow.execution, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BlockHeaderResponse, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockIDResponse, GetAccountAtBlockIDRequest, GetAccountAtBlockIDResponse, GetBlockHeaderByIDRequest, GetEventsForBlockIDsRequest, GetEventsForBlockIDsResponse, GetLatestBlockHeaderRequest, GetRegisterAtBlockIDRequest, GetRegisterAtBlockIDResponse, GetTransactionByIndexRequest, GetTransactionResultRequest, GetTransactionResultResponse, GetTransactionResultsResponse, GetTransactionsByBlockIDRequest, PingRequest, PingResponse } from "./execution_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ExecutionAPI is the API provided by the execution nodes.
 *
 * @generated from service flow.execution.ExecutionAPI
 */
export const ExecutionAPI = {
  typeName: "flow.execution.ExecutionAPI",
  methods: {
    /**
     * Ping is used to check if the access node is alive and healthy.
     *
     * @generated from rpc flow.execution.ExecutionAPI.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAccountAtBlockID gets an account by address at the given block ID
     *
     * @generated from rpc flow.execution.ExecutionAPI.GetAccountAtBlockID
     */
    getAccountAtBlockID: {
      name: "GetAccountAtBlockID",
      I: GetAccountAtBlockIDRequest,
      O: GetAccountAtBlockIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ExecuteScriptAtBlockID executes a ready-only Cadence script against the
     * execution state at the block with the given ID.
     *
     * @generated from rpc flow.execution.ExecutionAPI.ExecuteScriptAtBlockID
     */
    executeScriptAtBlockID: {
      name: "ExecuteScriptAtBlockID",
      I: ExecuteScriptAtBlockIDRequest,
      O: ExecuteScriptAtBlockIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetEventsForBlockIDs retrieves events for all the specified block IDs that
     * have the given type
     *
     * @generated from rpc flow.execution.ExecutionAPI.GetEventsForBlockIDs
     */
    getEventsForBlockIDs: {
      name: "GetEventsForBlockIDs",
      I: GetEventsForBlockIDsRequest,
      O: GetEventsForBlockIDsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetTransactionResult gets the result of a transaction.
     *
     * @generated from rpc flow.execution.ExecutionAPI.GetTransactionResult
     */
    getTransactionResult: {
      name: "GetTransactionResult",
      I: GetTransactionResultRequest,
      O: GetTransactionResultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetTransactionResultByIndex gets the result of a transaction at the index .
     *
     * @generated from rpc flow.execution.ExecutionAPI.GetTransactionResultByIndex
     */
    getTransactionResultByIndex: {
      name: "GetTransactionResultByIndex",
      I: GetTransactionByIndexRequest,
      O: GetTransactionResultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetTransactionResultByIndex gets the results of all transactions in the
     * block ordered by transaction index
     *
     * @generated from rpc flow.execution.ExecutionAPI.GetTransactionResultsByBlockID
     */
    getTransactionResultsByBlockID: {
      name: "GetTransactionResultsByBlockID",
      I: GetTransactionsByBlockIDRequest,
      O: GetTransactionResultsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetRegisterAtBlockID collects a register at the block with the given ID (if
     * available).
     *
     * @generated from rpc flow.execution.ExecutionAPI.GetRegisterAtBlockID
     */
    getRegisterAtBlockID: {
      name: "GetRegisterAtBlockID",
      I: GetRegisterAtBlockIDRequest,
      O: GetRegisterAtBlockIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetLatestBlockHeader gets the latest sealed or unsealed block header.
     *
     * @generated from rpc flow.execution.ExecutionAPI.GetLatestBlockHeader
     */
    getLatestBlockHeader: {
      name: "GetLatestBlockHeader",
      I: GetLatestBlockHeaderRequest,
      O: BlockHeaderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetBlockHeaderByID gets a block header by ID.
     *
     * @generated from rpc flow.execution.ExecutionAPI.GetBlockHeaderByID
     */
    getBlockHeaderByID: {
      name: "GetBlockHeaderByID",
      I: GetBlockHeaderByIDRequest,
      O: BlockHeaderResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

