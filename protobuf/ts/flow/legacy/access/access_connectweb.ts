// @generated by protoc-gen-connect-web v0.3.2 with parameter "target=ts"
// @generated from file flow/legacy/access/access.proto (package access, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AccountResponse, BlockHeaderResponse, BlockResponse, CollectionResponse, EventsResponse, ExecuteScriptAtBlockHeightRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtLatestBlockRequest, ExecuteScriptResponse, GetAccountAtBlockHeightRequest, GetAccountAtLatestBlockRequest, GetAccountRequest, GetAccountResponse, GetBlockByHeightRequest, GetBlockByIDRequest, GetBlockHeaderByHeightRequest, GetBlockHeaderByIDRequest, GetCollectionByIDRequest, GetEventsForBlockIDsRequest, GetEventsForHeightRangeRequest, GetLatestBlockHeaderRequest, GetLatestBlockRequest, GetNetworkParametersRequest, GetNetworkParametersResponse, GetTransactionRequest, PingRequest, PingResponse, SendTransactionRequest, SendTransactionResponse, TransactionResponse, TransactionResultResponse } from "./access_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * AccessAPI is the public-facing API provided by access nodes.
 *
 * @generated from service access.AccessAPI
 */
export const AccessAPI = {
  typeName: "access.AccessAPI",
  methods: {
    /**
     * Ping is used to check if the access node is alive and healthy.
     *
     * @generated from rpc access.AccessAPI.Ping
     */
    ping: {
      name: "Ping",
      I: PingRequest,
      O: PingResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetLatestBlockHeader gets the latest sealed or unsealed block header.
     *
     * @generated from rpc access.AccessAPI.GetLatestBlockHeader
     */
    getLatestBlockHeader: {
      name: "GetLatestBlockHeader",
      I: GetLatestBlockHeaderRequest,
      O: BlockHeaderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetBlockHeaderByID gets a block header by ID.
     *
     * @generated from rpc access.AccessAPI.GetBlockHeaderByID
     */
    getBlockHeaderByID: {
      name: "GetBlockHeaderByID",
      I: GetBlockHeaderByIDRequest,
      O: BlockHeaderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetBlockHeaderByHeight gets a block header by height.
     *
     * @generated from rpc access.AccessAPI.GetBlockHeaderByHeight
     */
    getBlockHeaderByHeight: {
      name: "GetBlockHeaderByHeight",
      I: GetBlockHeaderByHeightRequest,
      O: BlockHeaderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetLatestBlock gets the full payload of the latest sealed or unsealed
     * block.
     *
     * @generated from rpc access.AccessAPI.GetLatestBlock
     */
    getLatestBlock: {
      name: "GetLatestBlock",
      I: GetLatestBlockRequest,
      O: BlockResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetBlockByID gets a full block by ID.
     *
     * @generated from rpc access.AccessAPI.GetBlockByID
     */
    getBlockByID: {
      name: "GetBlockByID",
      I: GetBlockByIDRequest,
      O: BlockResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetBlockByHeight gets a full block by height.
     *
     * @generated from rpc access.AccessAPI.GetBlockByHeight
     */
    getBlockByHeight: {
      name: "GetBlockByHeight",
      I: GetBlockByHeightRequest,
      O: BlockResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetCollectionByID gets a collection by ID.
     *
     * @generated from rpc access.AccessAPI.GetCollectionByID
     */
    getCollectionByID: {
      name: "GetCollectionByID",
      I: GetCollectionByIDRequest,
      O: CollectionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SendTransaction submits a transaction to the network.
     *
     * @generated from rpc access.AccessAPI.SendTransaction
     */
    sendTransaction: {
      name: "SendTransaction",
      I: SendTransactionRequest,
      O: SendTransactionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetTransaction gets a transaction by ID.
     *
     * @generated from rpc access.AccessAPI.GetTransaction
     */
    getTransaction: {
      name: "GetTransaction",
      I: GetTransactionRequest,
      O: TransactionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetTransactionResult gets the result of a transaction.
     *
     * @generated from rpc access.AccessAPI.GetTransactionResult
     */
    getTransactionResult: {
      name: "GetTransactionResult",
      I: GetTransactionRequest,
      O: TransactionResultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAccount is an alias for GetAccountAtLatestBlock.
     *
     * Warning: this function is deprecated. It behaves identically to
     * GetAccountAtLatestBlock and will be removed in a future version.
     *
     * @generated from rpc access.AccessAPI.GetAccount
     */
    getAccount: {
      name: "GetAccount",
      I: GetAccountRequest,
      O: GetAccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAccountAtLatestBlock gets an account by address from the latest sealed
     * execution state.
     *
     * @generated from rpc access.AccessAPI.GetAccountAtLatestBlock
     */
    getAccountAtLatestBlock: {
      name: "GetAccountAtLatestBlock",
      I: GetAccountAtLatestBlockRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetAccountAtBlockHeight gets an account by address at the given block
     * height
     *
     * @generated from rpc access.AccessAPI.GetAccountAtBlockHeight
     */
    getAccountAtBlockHeight: {
      name: "GetAccountAtBlockHeight",
      I: GetAccountAtBlockHeightRequest,
      O: AccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ExecuteScriptAtLatestBlock executes a read-only Cadence script against the
     * latest sealed execution state.
     *
     * @generated from rpc access.AccessAPI.ExecuteScriptAtLatestBlock
     */
    executeScriptAtLatestBlock: {
      name: "ExecuteScriptAtLatestBlock",
      I: ExecuteScriptAtLatestBlockRequest,
      O: ExecuteScriptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ExecuteScriptAtBlockID executes a ready-only Cadence script against the
     * execution state at the block with the given ID.
     *
     * @generated from rpc access.AccessAPI.ExecuteScriptAtBlockID
     */
    executeScriptAtBlockID: {
      name: "ExecuteScriptAtBlockID",
      I: ExecuteScriptAtBlockIDRequest,
      O: ExecuteScriptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ExecuteScriptAtBlockHeight executes a ready-only Cadence script against the
     * execution state at the given block height.
     *
     * @generated from rpc access.AccessAPI.ExecuteScriptAtBlockHeight
     */
    executeScriptAtBlockHeight: {
      name: "ExecuteScriptAtBlockHeight",
      I: ExecuteScriptAtBlockHeightRequest,
      O: ExecuteScriptResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetEventsForHeightRange retrieves events emitted within the specified block
     * range.
     *
     * @generated from rpc access.AccessAPI.GetEventsForHeightRange
     */
    getEventsForHeightRange: {
      name: "GetEventsForHeightRange",
      I: GetEventsForHeightRangeRequest,
      O: EventsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetEventsForBlockIDs retrieves events for the specified block IDs and event
     * type.
     *
     * @generated from rpc access.AccessAPI.GetEventsForBlockIDs
     */
    getEventsForBlockIDs: {
      name: "GetEventsForBlockIDs",
      I: GetEventsForBlockIDsRequest,
      O: EventsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetNetworkParameters retrieves the Flow network details
     *
     * @generated from rpc access.AccessAPI.GetNetworkParameters
     */
    getNetworkParameters: {
      name: "GetNetworkParameters",
      I: GetNetworkParametersRequest,
      O: GetNetworkParametersResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

